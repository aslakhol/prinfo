{"version":3,"sources":["Clock.js","OpeningHours.js","Bikes.js","Busses.js","WeatherUnit.js","Weather.js","DadJokes.js","App.js","index.js"],"names":["Clock","concat","dateTime","DateTime","local","setLocale","react_default","a","createElement","className","toLocaleString","TIME_24_SIMPLE","weekday","day","month","service","EnturService","clientName","Station","props","station","name","bikesAvailable","spacesAvailable","BikeStations","_useState","useState","_useState2","Object","slicedToArray","bikeStations","setBikeStations","useEffect","getBikeRentalStations","latitude","longitude","then","data","map","Bikes_Station","key","id","Departure","departure","expectedDepartureTime","serviceJourney","departureTime","fromISO","timeTilDeparture","calculateTimeTilDeparture","journeyPattern","line","publicCode","now","minuteFloat","diff","toObject","minutes","flooredMinute","Math","floor","Busses","departures","setDepartures","_useState3","_useState4","departuresFromCenter","setDeparturesFromCenter","_useState5","_useState6","departuresToCenter","setDeparturesToCenter","getStopPlaceDepartures","filter","d","quay","slice","Busses_Departure","WeatherUnit","weather","_props$weather","symbol","precipitation","temperature","time","iconUrl","number","readableTime","src","alt","Fragment","weatherHourFormat","undefined","Weather","weatherApiResponse","setweatherApiResponse","threeHFromNow","sixHFromNow","setWeather","fetch","response","json","catch","err","console","error","createWeatherHour","segment","to","location","value","product","times","firstTime","timeInThree","plus","hour","timeInSix","equals","createWeather","src_WeatherUnit","class","DadJokes","joke","setJoke","children","title","selftext","App","src_Clock","src_Busses","Bikes","src_Weather","src_DadJokes","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.6cf7cbf5.chunk.js","sourcesContent":["import React from \"react\";\nimport { DateTime } from \"luxon\";\n\nconst Clock = () => {\n  const dateTime = DateTime.local().setLocale(\"nb-NO\");\n\n  return (\n    <div className=\"clock\">\n      <h1 className=\"time\">\n        {dateTime.toLocaleString(DateTime.TIME_24_SIMPLE)}\n      </h1>\n      <h1 className=\"date\">\n        {dateTime.toLocaleString({\n          weekday: \"long\",\n          day: \"numeric\",\n          month: \"long\"\n        })}\n      </h1>\n    </div>\n  );\n};\n\nexport default Clock;\n","import React, { useState, useEffect } from \"react\";\nimport Script from \"react-load-script\";\nimport { DateTime } from \"luxon\";\n\n// const denGodeNaboId = \"ChIJnSfpw5kxbUYRrD-oYXLVPTI\";\nconst name = \"Extra\";\nconst placeId = \"ChIJj_IGzpoxbUYR7VCF93NHcjU\";\nconst mapsApiKey = \"AIzaSyCGXAYCU315Z115dqgXmSA5k0Uy5nOHesY\";\nconst apiUrl = `https://maps.googleapis.com/maps/api/js?key=${mapsApiKey}&libraries=places&language=nb-NO`;\n\nconst OpeningHours = () => {\n  const [hours, setHours] = useState({ weekday_text: [] });\n  const [open, setOpen] = useState(false);\n  const [apiLoaded, setApiLoaded] = useState(false);\n  const dateTime = DateTime.local();\n\n  const getHours = () => {\n    const request = {\n      placeId: placeId,\n      fields: [\"opening_hours\", \"utc_offset_minutes\"]\n    };\n\n    /*global google*/\n    const service = new google.maps.places.PlacesService(\n      document.getElementById(\"attrs\")\n    );\n\n    service.getDetails(request, (place, status) => {\n      if (status === google.maps.places.PlacesServiceStatus.OK) {\n        setHours(place.opening_hours);\n        setOpen(place.opening_hours.isOpen());\n      } else {\n        console.error(status);\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (apiLoaded) {\n      getHours();\n    }\n  }, [apiLoaded]);\n\n  return (\n    <div className=\"hours\">\n      <Script\n        onLoad={() => setApiLoaded(true)}\n        onError={() => setApiLoaded(false)}\n        url={apiUrl}\n      />\n      <p>{open ? `${name} er Ã¥pent!` : `${name} er stengt :(`}</p>\n      <p style={{ textTransform: \"capitalize\" }}>\n        {hours.weekday_text[dateTime.weekday - 1]}\n      </p>\n      <div id=\"attrs\"></div>\n    </div>\n  );\n};\n\nexport default OpeningHours;\n","import React, { useState, useEffect } from \"react\";\nimport EnturService from \"@entur/sdk\";\n\nconst service = new EnturService({ clientName: \"hollund-prinfo\" });\n\nconst BikeStations = () => {\n  const [bikeStations, setBikeStations] = useState([]);\n\n  useEffect(() => {\n    service\n      .getBikeRentalStations({ latitude: 63.428311, longitude: 10.392514 }, 230)\n      .then(data => setBikeStations(data));\n  }, []);\n\n  return (\n    <div className=\"bikes\">\n      <h2>Bysykkel</h2>\n      {bikeStations.map(station => (\n        <Station key={station.id} station={station} />\n      ))}\n    </div>\n  );\n};\n\nconst Station = props => {\n  const { station } = props;\n  return (\n    <div className=\"station\">\n      {station.name} - {station.bikesAvailable} : {station.spacesAvailable}\n    </div>\n  );\n};\n\nexport default BikeStations;\n","import React, { useState, useEffect } from \"react\";\nimport EnturService from \"@entur/sdk\";\nimport { DateTime } from \"luxon\";\n\nconst service = new EnturService({ clientName: \"hollund-prinfo\" });\n\nconst Busses = () => {\n  const [departures, setDepartures] = useState([]);\n  const [departuresFromCenter, setDeparturesFromCenter] = useState([]);\n  const [departuresToCenter, setDeparturesToCenter] = useState([]);\n\n  const id = \"NSR:StopPlace:41613\";\n\n  const fromCenter = \"NSR:Quay:71184\";\n  const toCenter = \"NSR:Quay:71181\";\n\n  const size = 6;\n\n  useEffect(() => {\n    service.getStopPlaceDepartures(id).then(data => setDepartures(data));\n  }, []);\n\n  useEffect(() => {\n    setDeparturesFromCenter(departures.filter(d => d.quay.id === fromCenter));\n    setDeparturesToCenter(departures.filter(d => d.quay.id === toCenter));\n  }, [departures]);\n\n  return (\n    <div className=\"busses\">\n      <div className=\"from\">\n        <h2>Fra Sentrum</h2>\n        {departuresFromCenter.slice(0, size).map(departure => (\n          <Departure key={departure.serviceJourney.id} departure={departure} />\n        ))}\n      </div>\n      <div className=\"towards\">\n        <h2>Mot Sentrum</h2>\n        {departuresToCenter.slice(0, size).map(departure => (\n          <Departure key={departure.serviceJourney.id} departure={departure} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst Departure = props => {\n  const { departure } = props;\n  const { expectedDepartureTime, serviceJourney } = departure;\n  const departureTime = DateTime.fromISO(expectedDepartureTime);\n  const timeTilDeparture = calculateTimeTilDeparture(departureTime);\n  return (\n    <div className=\"departure\">\n      # {serviceJourney.journeyPattern.line.publicCode} - {timeTilDeparture}\n    </div>\n  );\n};\n\nconst calculateTimeTilDeparture = departureTime => {\n  const now = DateTime.local();\n  const diff = departureTime.diff(now, \"minutes\");\n  const minuteFloat = diff.toObject().minutes;\n  const flooredMinute = Math.floor(minuteFloat);\n  const semanticTimeToDeparture =\n    flooredMinute === 0 ? \"NÃ¥\" : flooredMinute + \" min\";\n  return semanticTimeToDeparture;\n};\n\nexport default Busses;\n","import React from \"react\";\nimport { DateTime } from \"luxon\";\n\nconst WeatherUnit = props => {\n  if (props.weather) {\n    const { symbol, precipitation, temperature, time } = props.weather;\n    const iconUrl = `https://api.met.no/weatherapi/weathericon/1.1/?symbol=${symbol.number}&content_type=image/png`;\n    const readableTime = DateTime.fromISO(time).toLocaleString(\n      DateTime.TIME_24_SIMPLE\n    );\n\n    return (\n      <div className=\"weather-unit\">\n        <h2>{readableTime} </h2>\n        <span>{temperature}Â°C</span>\n        <img src={iconUrl} alt={symbol.id} />\n        <span>{precipitation}mm </span>\n      </div>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nexport default WeatherUnit;\n","import React, { useState, useEffect } from \"react\";\nimport { DateTime } from \"luxon\";\n\nimport WeatherUnit from \"./WeatherUnit\";\n\nconst weatherUrl =\n  \"https://api.met.no/weatherapi/locationforecast/1.9/.json?lat=63.428311&lon=10.392514\";\n\nconst weatherHourFormat = {\n  time: undefined,\n  temperature: undefined,\n  symbol: { symbol: undefined, id: undefined },\n  precipitation: undefined\n};\n\nconst Weather = () => {\n  const [weatherApiResponse, setweatherApiResponse] = useState({});\n  const [weather, setWeather] = useState({\n    now: weatherHourFormat,\n    threeHFromNow: weatherHourFormat,\n    sixHFromNow: weatherHourFormat\n  });\n\n  const getWeather = () => {\n    fetch(weatherUrl)\n      .then(response => response.json())\n      .then(json => setweatherApiResponse(json))\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  useEffect(() => {\n    getWeather();\n  }, []);\n\n  useEffect(() => {\n    const createWeatherHour = segment => {\n      return {\n        time: segment[0].to,\n        temperature: segment[0].location.temperature.value,\n        symbol: segment[1].location.symbol,\n        precipitation: segment[1].location.precipitation.value\n      };\n    };\n\n    const createWeather = times => {\n      const firstTime = DateTime.fromISO(times[0].to);\n      const timeInThree = firstTime.plus({ hour: 3 });\n      const timeInSix = firstTime.plus({ hour: 6 });\n\n      const now = createWeatherHour(\n        times\n          .slice(0, 25)\n          .filter(time => DateTime.fromISO(time.to).equals(firstTime))\n      );\n      const threeHFromNow = createWeatherHour(\n        times\n          .slice(0, 25)\n          .filter(time => DateTime.fromISO(time.to).equals(timeInThree))\n      );\n      const sixHFromNow = createWeatherHour(\n        times\n          .slice(0, 25)\n          .filter(time => DateTime.fromISO(time.to).equals(timeInSix))\n      );\n      return { now, threeHFromNow, sixHFromNow };\n    };\n\n    if (weatherApiResponse.product) {\n      const time = weatherApiResponse.product.time;\n      setWeather(createWeather(time));\n    }\n  }, [weatherApiResponse]);\n\n  return (\n    <div className=\"weather\">\n      <WeatherUnit class=\"now\" weather={weather.now}></WeatherUnit>\n      <WeatherUnit\n        class=\"threeHFromNow\"\n        weather={weather.threeHFromNow}\n      ></WeatherUnit>\n      <WeatherUnit\n        class=\"sixHFromNow\"\n        weather={weather.sixHFromNow}\n      ></WeatherUnit>\n    </div>\n  );\n};\n\nexport default Weather;\n","import React, { useState, useEffect } from \"react\";\n\nconst timeUrl = \"https://www.reddit.com/r/dadjokes/top.json?t=day&limit=1\";\n\nconst DadJokes = () => {\n  const [joke, setJoke] = useState({});\n\n  const getJoke = () => {\n    fetch(timeUrl)\n      .then(response => response.json())\n      .then(json => setJoke(json.data.children[0].data))\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  useEffect(() => {\n    getJoke();\n  }, []);\n\n  return joke.title ? (\n    <div className=\"joke\">\n      <p>{joke.title}</p>\n      <p>{joke.selftext}</p>\n    </div>\n  ) : (\n    <></>\n  );\n};\n\nexport default DadJokes;\n","import React from \"react\";\nimport OpeningHours from \"./OpeningHours\";\nimport Clock from \"./Clock\";\nimport Bikes from \"./Bikes\";\nimport Busses from \"./Busses\";\nimport Weather from \"./Weather\";\nimport DadJokes from \"./DadJokes\";\n// import ApiTime from './ApiTime';\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"wrapper\">\n      {/* <ApiTime /> */}\n      <Clock />\n      <Busses />\n      <Bikes />\n      <Weather />\n      {/* <OpeningHours /> */}\n      <DadJokes />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}