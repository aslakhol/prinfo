{"version":3,"sources":["OpeningHours.js","Clock.js","Bikes.js","Busses.js","WeatherUnit.js","Weather.js","DadJokes.js","App.js","index.js"],"names":["apiUrl","OpeningHours","useState","weekday_text","hours","setHours","open","setOpen","apiLoaded","setApiLoaded","dateTime","DateTime","local","useEffect","request","placeId","fields","google","maps","places","PlacesService","document","getElementById","getDetails","place","status","PlacesServiceStatus","OK","opening_hours","isOpen","console","error","getHours","className","onLoad","onError","url","style","textTransform","weekday","id","Clock","setLocale","toLocaleString","TIME_24_SIMPLE","day","month","service","EnturService","clientName","Station","props","station","name","bikesAvailable","spacesAvailable","BikeStations","bikeStations","setBikeStations","getBikeRentalStations","latitude","longitude","then","data","map","key","Departure","departure","expectedDepartureTime","serviceJourney","departureTime","fromISO","timeTilDeparture","calculateTimeTilDeparture","journeyPattern","line","publicCode","now","minuteFloat","diff","toObject","minutes","flooredMinute","Math","floor","Busses","departures","setDepartures","departuresFromCenter","setDeparturesFromCenter","departuresToCenter","setDeparturesToCenter","getStopPlaceDepartures","filter","d","quay","slice","WeatherUnit","weather","symbol","precipitation","temperature","time","iconUrl","number","readableTime","src","alt","weatherHourFormat","undefined","Weather","weatherApiResponse","setweatherApiResponse","threeHFromNow","sixHFromNow","setWeather","fetch","response","json","catch","err","createWeatherHour","segment","to","location","value","product","times","firstTime","timeInThree","plus","hour","timeInSix","equals","createWeather","class","DadJokes","joke","setJoke","children","title","selftext","App","Bikes","ReactDOM","render"],"mappings":"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","file":"static/js/main.eba987a3.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Script from \"react-load-script\";\nimport { DateTime } from \"luxon\";\n\n// const denGodeNaboId = \"ChIJnSfpw5kxbUYRrD-oYXLVPTI\";\nconst name = \"Extra\";\nconst placeId = \"ChIJj_IGzpoxbUYR7VCF93NHcjU\";\nconst mapsApiKey = \"AIzaSyCGXAYCU315Z115dqgXmSA5k0Uy5nOHesY\";\nconst apiUrl = `https://maps.googleapis.com/maps/api/js?key=${mapsApiKey}&libraries=places&language=nb-NO`;\n\nconst OpeningHours = () => {\n  const [hours, setHours] = useState({ weekday_text: [] });\n  const [open, setOpen] = useState(false);\n  const [apiLoaded, setApiLoaded] = useState(false);\n  const dateTime = DateTime.local();\n\n  const getHours = () => {\n    const request = {\n      placeId: placeId,\n      fields: [\"opening_hours\", \"utc_offset_minutes\"]\n    };\n\n    /*global google*/\n    const service = new google.maps.places.PlacesService(\n      document.getElementById(\"attrs\")\n    );\n\n    service.getDetails(request, (place, status) => {\n      if (status === google.maps.places.PlacesServiceStatus.OK) {\n        setHours(place.opening_hours);\n        setOpen(place.opening_hours.isOpen());\n      } else {\n        console.error(status);\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (apiLoaded) {\n      getHours();\n    }\n  }, [apiLoaded]);\n\n  return (\n    <div className=\"hours\">\n      <Script\n        onLoad={() => setApiLoaded(true)}\n        onError={() => setApiLoaded(false)}\n        url={apiUrl}\n      />\n      <p>{open ? `${name} er Ã¥pent!` : `${name} er stengt :(`}</p>\n      <p style={{ textTransform: \"capitalize\" }}>\n        {hours.weekday_text[dateTime.weekday - 1]}\n      </p>\n      <div id=\"attrs\"></div>\n    </div>\n  );\n};\n\nexport default OpeningHours;\n","import React from \"react\";\nimport { DateTime } from \"luxon\";\n\nconst Clock = () => {\n  const dateTime = DateTime.local().setLocale(\"nb-NO\");\n\n  return (\n    <div className=\"clock\">\n      <h1 className=\"time\">\n        {dateTime.toLocaleString(DateTime.TIME_24_SIMPLE)}\n      </h1>\n      <h1 className=\"date\">\n        {dateTime.toLocaleString({\n          weekday: \"long\",\n          day: \"numeric\",\n          month: \"long\"\n        })}\n      </h1>\n    </div>\n  );\n};\n\nexport default Clock;\n","import React, { useState, useEffect } from \"react\";\nimport EnturService from \"@entur/sdk\";\n\nconst service = new EnturService({ clientName: \"hollund-prinfo\" });\n\nconst BikeStations = () => {\n  const [bikeStations, setBikeStations] = useState([]);\n\n  useEffect(() => {\n    service\n      .getBikeRentalStations({ latitude: 63.428311, longitude: 10.392514 }, 230)\n      .then(data => setBikeStations(data));\n  }, []);\n\n  return (\n    <div className=\"bikes\">\n      <h2>Bysykkel</h2>\n      {bikeStations.map(station => (\n        <Station key={station.id} station={station} />\n      ))}\n    </div>\n  );\n};\n\nconst Station = props => {\n  const { station } = props;\n  return (\n    <div className=\"station\">\n      {station.name} - {station.bikesAvailable} : {station.spacesAvailable}\n    </div>\n  );\n};\n\nexport default BikeStations;\n","import React, { useState, useEffect } from \"react\";\nimport EnturService from \"@entur/sdk\";\nimport { DateTime } from \"luxon\";\n\nconst service = new EnturService({ clientName: \"hollund-prinfo\" });\n\nconst Busses = () => {\n  const [departures, setDepartures] = useState([]);\n  const [departuresFromCenter, setDeparturesFromCenter] = useState([]);\n  const [departuresToCenter, setDeparturesToCenter] = useState([]);\n\n  const id = \"NSR:StopPlace:41613\";\n\n  const fromCenter = \"NSR:Quay:71184\";\n  const toCenter = \"NSR:Quay:71181\";\n\n  const size = 6;\n\n  useEffect(() => {\n    service.getStopPlaceDepartures(id).then(data => setDepartures(data));\n  }, []);\n\n  useEffect(() => {\n    setDeparturesFromCenter(departures.filter(d => d.quay.id === fromCenter));\n    setDeparturesToCenter(departures.filter(d => d.quay.id === toCenter));\n  }, [departures]);\n\n  return (\n    <div className=\"busses\">\n      <div className=\"from\">\n        <h2>Fra Sentrum</h2>\n        {departuresFromCenter.slice(0, size).map(departure => (\n          <Departure key={departure.serviceJourney.id} departure={departure} />\n        ))}\n      </div>\n      <div className=\"towards\">\n        <h2>Mot Sentrum</h2>\n        {departuresToCenter.slice(0, size).map(departure => (\n          <Departure key={departure.serviceJourney.id} departure={departure} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst Departure = props => {\n  const { departure } = props;\n  const { expectedDepartureTime, serviceJourney } = departure;\n  const departureTime = DateTime.fromISO(expectedDepartureTime);\n  const timeTilDeparture = calculateTimeTilDeparture(departureTime);\n  return (\n    <div className=\"departure\">\n      # {serviceJourney.journeyPattern.line.publicCode} - {timeTilDeparture}\n    </div>\n  );\n};\n\nconst calculateTimeTilDeparture = departureTime => {\n  const now = DateTime.local();\n  const diff = departureTime.diff(now, \"minutes\");\n  const minuteFloat = diff.toObject().minutes;\n  const flooredMinute = Math.floor(minuteFloat);\n  const semanticTimeToDeparture =\n    flooredMinute === 0 ? \"NÃ¥\" : flooredMinute + \" min\";\n  return semanticTimeToDeparture;\n};\n\nexport default Busses;\n","import React from \"react\";\nimport { DateTime } from \"luxon\";\n\nconst WeatherUnit = props => {\n  if (props.weather) {\n    const { symbol, precipitation, temperature, time } = props.weather;\n    const iconUrl = `https://api.met.no/weatherapi/weathericon/1.1/?symbol=${symbol.number}&content_type=image/png`;\n    const readableTime = DateTime.fromISO(time).toLocaleString(\n      DateTime.TIME_24_SIMPLE\n    );\n\n    return (\n      <div className=\"weather-unit\">\n        <h2>{readableTime} </h2>\n        <span>{temperature}Â°C</span>\n        <img src={iconUrl} alt={symbol.id} />\n        <span>{precipitation}mm </span>\n      </div>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nexport default WeatherUnit;\n","import React, { useState, useEffect } from \"react\";\nimport { DateTime } from \"luxon\";\n\nimport WeatherUnit from \"./WeatherUnit\";\n\nconst weatherUrl =\n  \"https://api.met.no/weatherapi/locationforecast/1.9/.json?lat=63.428311&lon=10.392514\";\n\nconst weatherHourFormat = {\n  time: undefined,\n  temperature: undefined,\n  symbol: { symbol: undefined, id: undefined },\n  precipitation: undefined\n};\n\nconst Weather = () => {\n  const [weatherApiResponse, setweatherApiResponse] = useState({});\n  const [weather, setWeather] = useState({\n    now: weatherHourFormat,\n    threeHFromNow: weatherHourFormat,\n    sixHFromNow: weatherHourFormat\n  });\n\n  const getWeather = () => {\n    fetch(weatherUrl)\n      .then(response => response.json())\n      .then(json => setweatherApiResponse(json))\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  useEffect(() => {\n    getWeather();\n  }, []);\n\n  useEffect(() => {\n    const createWeatherHour = segment => {\n      return {\n        time: segment[0].to,\n        temperature: segment[0].location.temperature.value,\n        symbol: segment[1].location.symbol,\n        precipitation: segment[1].location.precipitation.value\n      };\n    };\n\n    const createWeather = times => {\n      const firstTime = DateTime.fromISO(times[0].to);\n      const timeInThree = firstTime.plus({ hour: 3 });\n      const timeInSix = firstTime.plus({ hour: 6 });\n\n      const now = createWeatherHour(\n        times\n          .slice(0, 25)\n          .filter(time => DateTime.fromISO(time.to).equals(firstTime))\n      );\n      const threeHFromNow = createWeatherHour(\n        times\n          .slice(0, 25)\n          .filter(time => DateTime.fromISO(time.to).equals(timeInThree))\n      );\n      const sixHFromNow = createWeatherHour(\n        times\n          .slice(0, 25)\n          .filter(time => DateTime.fromISO(time.to).equals(timeInSix))\n      );\n      return { now, threeHFromNow, sixHFromNow };\n    };\n\n    if (weatherApiResponse.product) {\n      const time = weatherApiResponse.product.time;\n      setWeather(createWeather(time));\n    }\n  }, [weatherApiResponse]);\n\n  return (\n    <div className=\"weather\">\n      <WeatherUnit class=\"now\" weather={weather.now}></WeatherUnit>\n      <WeatherUnit\n        class=\"threeHFromNow\"\n        weather={weather.threeHFromNow}\n      ></WeatherUnit>\n      <WeatherUnit\n        class=\"sixHFromNow\"\n        weather={weather.sixHFromNow}\n      ></WeatherUnit>\n    </div>\n  );\n};\n\nexport default Weather;\n","import React, { useState, useEffect } from \"react\";\n\nconst timeUrl = \"https://www.reddit.com/r/dadjokes/top.json?t=day&limit=1\";\n\nconst DadJokes = () => {\n  const [joke, setJoke] = useState({});\n\n  const getJoke = () => {\n    fetch(timeUrl)\n      .then(response => response.json())\n      .then(json => setJoke(json.data.children[0].data))\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  useEffect(() => {\n    getJoke();\n  }, []);\n\n  return joke.title ? (\n    <div className=\"joke\">\n      <p>{joke.title}</p>\n      <p>{joke.selftext}</p>\n    </div>\n  ) : (\n    <></>\n  );\n};\n\nexport default DadJokes;\n","import React from \"react\";\nimport OpeningHours from \"./OpeningHours\";\nimport Clock from \"./Clock\";\nimport Bikes from \"./Bikes\";\nimport Busses from \"./Busses\";\nimport Weather from \"./Weather\";\nimport DadJokes from \"./DadJokes\";\n// import ApiTime from './ApiTime';\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"wrapper\">\n      {/* <ApiTime /> */}\n      <Clock />\n      <Busses />\n      <Bikes />\n      <Weather />\n      <OpeningHours />\n      <DadJokes />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}