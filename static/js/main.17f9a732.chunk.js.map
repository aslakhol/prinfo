{"version":3,"sources":["Clock.js","OpeningHours.js","Bikes.js","Busses.js","WeatherUnit.js","Weather.js","DadJokes.js","App.js","index.js"],"names":["Clock","dateTime","DateTime","local","setLocale","className","toLocaleString","TIME_24_SIMPLE","weekday","day","month","service","EnturService","clientName","Station","props","station","name","bikesAvailable","spacesAvailable","BikeStations","useState","bikeStations","setBikeStations","useEffect","getBikeRentalStations","latitude","longitude","then","data","map","key","id","Departure","departure","expectedDepartureTime","serviceJourney","departureTime","fromISO","timeTilDeparture","calculateTimeTilDeparture","journeyPattern","line","publicCode","now","minuteFloat","diff","toObject","minutes","flooredMinute","Math","floor","Busses","departures","setDepartures","departuresFromCenter","setDeparturesFromCenter","departuresToCenter","setDeparturesToCenter","getStopPlaceDepartures","filter","d","quay","slice","WeatherUnit","weather","symbol","precipitation","temperature","time","iconUrl","number","readableTime","src","alt","weatherHourFormat","undefined","Weather","weatherApiResponse","setweatherApiResponse","threeHFromNow","sixHFromNow","setWeather","fetch","response","json","catch","err","console","error","createWeatherHour","segment","to","location","value","product","times","firstTime","timeInThree","plus","hour","timeInSix","equals","createWeather","class","DadJokes","joke","setJoke","children","title","selftext","App","Bikes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17f9a732.chunk.js","sourcesContent":["import React from \"react\";\nimport { DateTime } from \"luxon\";\n\nconst Clock = () => {\n  const dateTime = DateTime.local().setLocale(\"nb-NO\");\n\n  return (\n    <div className=\"clock\">\n      <h1 className=\"time\">\n        {dateTime.toLocaleString(DateTime.TIME_24_SIMPLE)}\n      </h1>\n      <h1 className=\"date\">\n        {dateTime.toLocaleString({\n          weekday: \"long\",\n          day: \"numeric\",\n          month: \"long\"\n        })}\n      </h1>\n    </div>\n  );\n};\n\nexport default Clock;\n","import React, { useState, useEffect } from \"react\";\nimport Script from \"react-load-script\";\nimport { DateTime } from \"luxon\";\n\n// const denGodeNaboId = \"ChIJnSfpw5kxbUYRrD-oYXLVPTI\";\nconst name = \"Extra\";\nconst placeId = \"ChIJj_IGzpoxbUYR7VCF93NHcjU\";\nconst mapsApiKey = \"AIzaSyCGXAYCU315Z115dqgXmSA5k0Uy5nOHesY\";\nconst apiUrl = `https://maps.googleapis.com/maps/api/js?key=${mapsApiKey}&libraries=places&language=nb-NO`;\n\nconst OpeningHours = () => {\n  const [hours, setHours] = useState({ weekday_text: [] });\n  const [open, setOpen] = useState(false);\n  const [apiLoaded, setApiLoaded] = useState(false);\n  const dateTime = DateTime.local();\n\n  const getHours = () => {\n    const request = {\n      placeId: placeId,\n      fields: [\"opening_hours\", \"utc_offset_minutes\"]\n    };\n\n    /*global google*/\n    const service = new google.maps.places.PlacesService(\n      document.getElementById(\"attrs\")\n    );\n\n    service.getDetails(request, (place, status) => {\n      if (status === google.maps.places.PlacesServiceStatus.OK) {\n        setHours(place.opening_hours);\n        setOpen(place.opening_hours.isOpen());\n      } else {\n        console.error(status);\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (apiLoaded) {\n      getHours();\n    }\n  }, [apiLoaded]);\n\n  return (\n    <div className=\"hours\">\n      <Script\n        onLoad={() => setApiLoaded(true)}\n        onError={() => setApiLoaded(false)}\n        url={apiUrl}\n      />\n      <p>{open ? `${name} er Ã¥pent!` : `${name} er stengt :(`}</p>\n      <p style={{ textTransform: \"capitalize\" }}>\n        {hours.weekday_text[dateTime.weekday - 1]}\n      </p>\n      <div id=\"attrs\"></div>\n    </div>\n  );\n};\n\nexport default OpeningHours;\n","import React, { useState, useEffect } from \"react\";\nimport EnturService from \"@entur/sdk\";\n\nconst service = new EnturService({ clientName: \"hollund-prinfo\" });\n\nconst BikeStations = () => {\n  const [bikeStations, setBikeStations] = useState([]);\n\n  useEffect(() => {\n    service\n      .getBikeRentalStations({ latitude: 63.428311, longitude: 10.392514 }, 230)\n      .then(data => setBikeStations(data));\n  }, []);\n\n  return (\n    <div className=\"bikes\">\n      <h2>Bysykkel</h2>\n      {bikeStations.map(station => (\n        <Station key={station.id} station={station} />\n      ))}\n    </div>\n  );\n};\n\nconst Station = props => {\n  const { station } = props;\n  return (\n    <div className=\"station\">\n      {station.name} - {station.bikesAvailable} : {station.spacesAvailable}\n    </div>\n  );\n};\n\nexport default BikeStations;\n","import React, { useState, useEffect } from \"react\";\nimport EnturService from \"@entur/sdk\";\nimport { DateTime } from \"luxon\";\n\nconst service = new EnturService({ clientName: \"hollund-prinfo\" });\n\nconst Busses = () => {\n  const [departures, setDepartures] = useState([]);\n  const [departuresFromCenter, setDeparturesFromCenter] = useState([]);\n  const [departuresToCenter, setDeparturesToCenter] = useState([]);\n\n  const id = \"NSR:StopPlace:41613\";\n\n  const fromCenter = \"NSR:Quay:71184\";\n  const toCenter = \"NSR:Quay:71181\";\n\n  const size = 6;\n\n  useEffect(() => {\n    service.getStopPlaceDepartures(id).then(data => setDepartures(data));\n  }, []);\n\n  useEffect(() => {\n    setDeparturesFromCenter(departures.filter(d => d.quay.id === fromCenter));\n    setDeparturesToCenter(departures.filter(d => d.quay.id === toCenter));\n  }, [departures]);\n\n  return (\n    <div className=\"busses\">\n      <div className=\"from\">\n        <h2>Fra Sentrum</h2>\n        {departuresFromCenter.slice(0, size).map(departure => (\n          <Departure key={departure.serviceJourney.id} departure={departure} />\n        ))}\n      </div>\n      <div className=\"towards\">\n        <h2>Mot Sentrum</h2>\n        {departuresToCenter.slice(0, size).map(departure => (\n          <Departure key={departure.serviceJourney.id} departure={departure} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst Departure = props => {\n  const { departure } = props;\n  const { expectedDepartureTime, serviceJourney } = departure;\n  const departureTime = DateTime.fromISO(expectedDepartureTime);\n  const timeTilDeparture = calculateTimeTilDeparture(departureTime);\n  return (\n    <div className=\"departure\">\n      # {serviceJourney.journeyPattern.line.publicCode} - {timeTilDeparture}\n    </div>\n  );\n};\n\nconst calculateTimeTilDeparture = departureTime => {\n  const now = DateTime.local();\n  const diff = departureTime.diff(now, \"minutes\");\n  const minuteFloat = diff.toObject().minutes;\n  const flooredMinute = Math.floor(minuteFloat);\n  const semanticTimeToDeparture =\n    flooredMinute === 0 ? \"NÃ¥\" : flooredMinute + \" min\";\n  return semanticTimeToDeparture;\n};\n\nexport default Busses;\n","import React from \"react\";\nimport { DateTime } from \"luxon\";\n\nconst WeatherUnit = props => {\n  if (props.weather) {\n    const { symbol, precipitation, temperature, time } = props.weather;\n    const iconUrl = `https://api.met.no/weatherapi/weathericon/1.1/?symbol=${symbol.number}&content_type=image/png`;\n    const readableTime = DateTime.fromISO(time).toLocaleString(\n      DateTime.TIME_24_SIMPLE\n    );\n\n    return (\n      <div className=\"weather-unit\">\n        <h2>{readableTime} </h2>\n        <span>{temperature}Â°C</span>\n        <img src={iconUrl} alt={symbol.id} />\n        <span>{precipitation}mm </span>\n      </div>\n    );\n  } else {\n    return <></>;\n  }\n};\n\nexport default WeatherUnit;\n","import React, { useState, useEffect } from \"react\";\nimport { DateTime } from \"luxon\";\n\nimport WeatherUnit from \"./WeatherUnit\";\n\nconst weatherUrl =\n  \"https://api.met.no/weatherapi/locationforecast/1.9/.json?lat=63.428311&lon=10.392514\";\n\nconst weatherHourFormat = {\n  time: undefined,\n  temperature: undefined,\n  symbol: { symbol: undefined, id: undefined },\n  precipitation: undefined\n};\n\nconst Weather = () => {\n  const [weatherApiResponse, setweatherApiResponse] = useState({});\n  const [weather, setWeather] = useState({\n    now: weatherHourFormat,\n    threeHFromNow: weatherHourFormat,\n    sixHFromNow: weatherHourFormat\n  });\n\n  const getWeather = () => {\n    fetch(weatherUrl)\n      .then(response => response.json())\n      .then(json => setweatherApiResponse(json))\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  useEffect(() => {\n    getWeather();\n  }, []);\n\n  useEffect(() => {\n    const createWeatherHour = segment => {\n      return {\n        time: segment[0].to,\n        temperature: segment[0].location.temperature.value,\n        symbol: segment[1].location.symbol,\n        precipitation: segment[1].location.precipitation.value\n      };\n    };\n\n    const createWeather = times => {\n      const firstTime = DateTime.fromISO(times[0].to);\n      const timeInThree = firstTime.plus({ hour: 3 });\n      const timeInSix = firstTime.plus({ hour: 6 });\n\n      const now = createWeatherHour(\n        times\n          .slice(0, 25)\n          .filter(time => DateTime.fromISO(time.to).equals(firstTime))\n      );\n      const threeHFromNow = createWeatherHour(\n        times\n          .slice(0, 25)\n          .filter(time => DateTime.fromISO(time.to).equals(timeInThree))\n      );\n      const sixHFromNow = createWeatherHour(\n        times\n          .slice(0, 25)\n          .filter(time => DateTime.fromISO(time.to).equals(timeInSix))\n      );\n      return { now, threeHFromNow, sixHFromNow };\n    };\n\n    if (weatherApiResponse.product) {\n      const time = weatherApiResponse.product.time;\n      setWeather(createWeather(time));\n    }\n  }, [weatherApiResponse]);\n\n  return (\n    <div className=\"weather\">\n      <WeatherUnit class=\"now\" weather={weather.now}></WeatherUnit>\n      <WeatherUnit\n        class=\"threeHFromNow\"\n        weather={weather.threeHFromNow}\n      ></WeatherUnit>\n      <WeatherUnit\n        class=\"sixHFromNow\"\n        weather={weather.sixHFromNow}\n      ></WeatherUnit>\n    </div>\n  );\n};\n\nexport default Weather;\n","import React, { useState, useEffect } from \"react\";\n\nconst timeUrl = \"https://www.reddit.com/r/dadjokes/top.json?t=day&limit=1\";\n\nconst DadJokes = () => {\n  const [joke, setJoke] = useState({});\n\n  const getJoke = () => {\n    fetch(timeUrl)\n      .then(response => response.json())\n      .then(json => setJoke(json.data.children[0].data))\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  useEffect(() => {\n    getJoke();\n  }, []);\n\n  return joke.title ? (\n    <div className=\"joke\">\n      <p>{joke.title}</p>\n      <p>{joke.selftext}</p>\n    </div>\n  ) : (\n    <></>\n  );\n};\n\nexport default DadJokes;\n","import React from \"react\";\nimport OpeningHours from \"./OpeningHours\";\nimport Clock from \"./Clock\";\nimport Bikes from \"./Bikes\";\nimport Busses from \"./Busses\";\nimport Weather from \"./Weather\";\nimport DadJokes from \"./DadJokes\";\n// import ApiTime from './ApiTime';\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"wrapper\">\n      {/* <ApiTime /> */}\n      <Clock />\n      <Busses />\n      <Bikes />\n      <Weather />\n      {/* <OpeningHours /> */}\n      <DadJokes />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}